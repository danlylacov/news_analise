#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ JSON —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏ —Å–≤–µ—á–∞–º–∏
"""
import pandas as pd
import json
from datetime import datetime, timedelta

def create_synchronized_json():
    """–°–æ–∑–¥–∞–µ–º JSON –≥–¥–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–≤–µ—á–∏ –∏–∑ –æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞"""
    
    print("–ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
    df_news = pd.read_csv('test_news.csv')
    df_candles = pd.read_csv('public_test_candles.csv')
    
    print(f"–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"  –ù–æ–≤–æ—Å—Ç–µ–π: {len(df_news)}")
    print(f"  –°–≤–µ—á–µ–π: {len(df_candles)}")
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã
    df_news['publish_date'] = pd.to_datetime(df_news['publish_date'])
    df_candles['begin'] = pd.to_datetime(df_candles['begin'])
    
    print(f"\n–í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã:")
    print(f"  –ù–æ–≤–æ—Å—Ç–∏: {df_news['publish_date'].min()} - {df_news['publish_date'].max()}")
    print(f"  –°–≤–µ—á–∏: {df_candles['begin'].min()} - {df_candles['begin'].max()}")
    
    # –í–∞—Ä–∏–∞–Ω—Ç 1: –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–≤–µ—á–∏ –∏–∑ 2020 –≥–æ–¥–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    print(f"\n=== –í–ê–†–ò–ê–ù–¢ 1: –ò—â–µ–º —Å–≤–µ—á–∏ –∏–∑ 2020 –≥–æ–¥–∞ ===")
    candles_2020 = df_candles[df_candles['begin'].dt.year == 2020]
    print(f"–°–≤–µ—á–µ–π –≤ 2020 –≥–æ–¥—É: {len(candles_2020)}")
    
    if len(candles_2020) > 0:
        print("‚úÖ –ù–∞–π–¥–µ–Ω—ã —Å–≤–µ—á–∏ –∏–∑ 2020 –≥–æ–¥–∞!")
        selected_candles = candles_2020.head(50)  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 50
        selected_news = df_news.head(100)  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 100 –Ω–æ–≤–æ—Å—Ç–µ–π
    else:
        print("‚ùå –°–≤–µ—á–µ–π –∏–∑ 2020 –≥–æ–¥–∞ –Ω–µ—Ç")
        
        # –í–∞—Ä–∏–∞–Ω—Ç 2: –°–¥–≤–∏–≥–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∫ –¥–∞—Ç–∞–º —Å–≤–µ—á–µ–π
        print(f"\n=== –í–ê–†–ò–ê–ù–¢ 2: –°–¥–≤–∏–≥–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∫ –¥–∞—Ç–∞–º —Å–≤–µ—á–µ–π ===")
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 50 —Å–≤–µ—á–µ–π
        selected_candles = df_candles.head(50).copy()
        
        # –°–¥–≤–∏–≥–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∫ –ø–µ—Ä–∏–æ–¥—É —Å–≤–µ—á–µ–π
        news_start = selected_candles['begin'].min()
        news_end = selected_candles['begin'].max()
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 100 –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Å–¥–≤–∏–≥–∞–µ–º –∏—Ö –¥–∞—Ç—ã
        selected_news = df_news.head(100).copy()
        
        # –°–æ–∑–¥–∞–µ–º —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –ø–µ—Ä–∏–æ–¥—É —Å–≤–µ—á–µ–π
        news_dates = pd.date_range(start=news_start, end=news_end, periods=len(selected_news))
        selected_news['publish_date'] = news_dates
    
    print(f"\n–í—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"  –ù–æ–≤–æ—Å—Ç–µ–π: {len(selected_news)}")
    print(f"  –°–≤–µ—á–µ–π: {len(selected_candles)}")
    print(f"  –ù–æ–≤–æ—Å—Ç–∏: {selected_news['publish_date'].min()} - {selected_news['publish_date'].max()}")
    print(f"  –°–≤–µ—á–∏: {selected_candles['begin'].min()} - {selected_candles['begin'].max()}")
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JSON —Ñ–æ—Ä–º–∞—Ç
    news_list = []
    for _, row in selected_news.iterrows():
        news_item = {
            "publish_date": row['publish_date'].strftime('%Y-%m-%d %H:%M:%S'),
            "title": str(row['title']),
            "publication": str(row['publication'])
        }
        news_list.append(news_item)
    
    candles_list = []
    for _, row in selected_candles.iterrows():
        candle_item = {
            "begin": row['begin'].strftime('%Y-%m-%d'),
            "ticker": str(row['ticker']),
            "open": float(row['open']),
            "high": float(row['high']),
            "low": float(row['low']),
            "close": float(row['close']),
            "volume": int(row['volume'])
        }
        candles_list.append(candle_item)
    
    # –°–æ–∑–¥–∞–µ–º JSON —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    synchronized_data = {
        "news": news_list,
        "candles": candles_list,
        "artifacts_dir": "artifacts",
        "p_threshold": 0.3,  # –°–Ω–∏–∂–∞–µ–º –ø–æ—Ä–æ–≥
        "half_life_days": 2.0,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥ –ø–æ–ª—É—Ä–∞—Å–ø–∞–¥–∞
        "max_days": 30  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–∫–Ω–æ –ø–æ–∏—Å–∫–∞
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    with open('synchronized_swagger_data.json', 'w', encoding='utf-8') as f:
        json.dump(synchronized_data, f, ensure_ascii=False, indent=2)
    
    print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª synchronized_swagger_data.json")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  –ù–æ–≤–æ—Å—Ç–µ–π: {len(news_list)}")
    print(f"  –°–≤–µ—á–µ–π: {len(candles_list)}")
    print(f"  –¢–∏–∫–µ—Ä–æ–≤: {len(set(c['ticker'] for c in candles_list))}")
    print(f"  –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    print(f"    - p_threshold: {synchronized_data['p_threshold']}")
    print(f"    - half_life_days: {synchronized_data['half_life_days']}")
    print(f"    - max_days: {synchronized_data['max_days']}")
    
    return synchronized_data

if __name__ == "__main__":
    create_synchronized_json()

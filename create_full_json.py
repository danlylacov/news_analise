#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ JSON —Ñ–∞–π–ª–∞ —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ CSV
"""
import pandas as pd
import json
from datetime import datetime

def create_full_json_data():
    """–°–æ–∑–¥–∞–µ–º JSON —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ CSV —Ñ–∞–π–ª–æ–≤"""
    
    print("–ß–∏—Ç–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏...")
    # –ß–∏—Ç–∞–µ–º –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏
    df_news = pd.read_csv('test_news.csv')
    print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {len(df_news)}")
    
    print("–ß–∏—Ç–∞–µ–º —Å–≤–µ—á–∏...")
    # –ß–∏—Ç–∞–µ–º –≤—Å–µ —Å–≤–µ—á–∏
    df_candles = pd.read_csv('public_test_candles.csv')
    print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–≤–µ—á–µ–π: {len(df_candles)}")
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –≤ JSON —Ñ–æ—Ä–º–∞—Ç
    news_list = []
    for _, row in df_news.iterrows():
        news_item = {
            "publish_date": str(row['publish_date']),
            "title": str(row['title']),
            "publication": str(row['publication'])
        }
        news_list.append(news_item)
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å–≤–µ—á–∏ –≤ JSON —Ñ–æ—Ä–º–∞—Ç
    candles_list = []
    for _, row in df_candles.iterrows():
        candle_item = {
            "begin": str(row['begin']),
            "ticker": str(row['ticker']),
            "open": float(row['open']),
            "high": float(row['high']),
            "low": float(row['low']),
            "close": float(row['close']),
            "volume": int(row['volume'])
        }
        candles_list.append(candle_item)
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π JSON –æ–±—ä–µ–∫—Ç
    full_data = {
        "news": news_list,
        "candles": candles_list,
        "artifacts_dir": "artifacts",
        "p_threshold": 0.5,
        "half_life_days": 0.5,
        "max_days": 5
    }
    
    print(f"–°–æ–∑–¥–∞–Ω JSON —Å {len(news_list)} –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏ {len(candles_list)} —Å–≤–µ—á–∞–º–∏")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
    with open('full_swagger_data.json', 'w', encoding='utf-8') as f:
        json.dump(full_data, f, ensure_ascii=False, indent=2)
    
    print("‚úÖ –§–∞–π–ª full_swagger_data.json —Å–æ–∑–¥–∞–Ω!")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"–ù–æ–≤–æ—Å—Ç–µ–π: {len(news_list)}")
    print(f"–°–≤–µ—á–µ–π: {len(candles_list)}")
    print(f"–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–∏–∫–µ—Ä–æ–≤: {len(set(c['ticker'] for c in candles_list))}")
    print(f"–¢–∏–∫–µ—Ä—ã: {sorted(set(c['ticker'] for c in candles_list))}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    print(f"\nüì∞ –ü—Ä–∏–º–µ—Ä –Ω–æ–≤–æ—Å—Ç–∏:")
    print(f"–î–∞—Ç–∞: {news_list[0]['publish_date']}")
    print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {news_list[0]['title'][:100]}...")
    print(f"–ò–∑–¥–∞–Ω–∏–µ: {news_list[0]['publication']}")
    
    print(f"\nüìà –ü—Ä–∏–º–µ—Ä —Å–≤–µ—á–∏:")
    print(f"–î–∞—Ç–∞: {candles_list[0]['begin']}")
    print(f"–¢–∏–∫–µ—Ä: {candles_list[0]['ticker']}")
    print(f"OHLCV: {candles_list[0]['open']}/{candles_list[0]['high']}/{candles_list[0]['low']}/{candles_list[0]['close']}/{candles_list[0]['volume']}")

if __name__ == "__main__":
    create_full_json_data()

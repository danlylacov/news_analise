#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö JSON —Ñ–∞–π–ª–æ–≤
"""
import json
import requests

def test_fixed_json_files():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ JSON —Ñ–∞–π–ª—ã"""
    
    files_to_test = [
        ("examples/json_samples/synchronized_swagger_data.json", "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"),
        ("examples/json_samples/full_swagger_data_fixed.json", "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
    ]
    
    url = "http://176.57.217.27:8000/infer"
    
    for filename, description in files_to_test:
        print(f"\n{'='*60}")
        print(f"–¢–ï–°–¢: {description}")
        print(f"–§–∞–π–ª: {filename}")
        print(f"{'='*60}")
        
        try:
            # –ß–∏—Ç–∞–µ–º JSON —Ñ–∞–π–ª
            with open(filename, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            print(f"üìä –î–∞–Ω–Ω—ã–µ:")
            print(f"  –ù–æ–≤–æ—Å—Ç–µ–π: {len(data['news'])}")
            print(f"  –°–≤–µ—á–µ–π: {len(data['candles'])}")
            print(f"  –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:")
            print(f"    - p_threshold: {data['p_threshold']}")
            print(f"    - half_life_days: {data['half_life_days']}")
            print(f"    - max_days: {data['max_days']}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã
            if data['news']:
                news_dates = [item['publish_date'] for item in data['news']]
                print(f"  –ù–æ–≤–æ—Å—Ç–∏: {min(news_dates)} - {max(news_dates)}")
            
            if data['candles']:
                candle_dates = [item['begin'] for item in data['candles']]
                print(f"  –°–≤–µ—á–∏: {min(candle_dates)} - {max(candle_dates)}")
            
            print(f"\nüöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...")
            response = requests.post(url, json=data, timeout=120)
            
            print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ –£–°–ü–ï–•!")
                print(f"  –°—Ç–∞—Ç—É—Å: {result.get('status', 'unknown')}")
                print(f"  –°—Ç—Ä–æ–∫ —Å —Ñ–∏—á–∞–º–∏: {result.get('rows_features', 0)}")
                print(f"  –°—Ç—Ä–æ–∫ –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–º: {result.get('rows_joined', 0)}")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                if result.get('features_preview'):
                    features = result['features_preview']
                    non_zero_features = [f for f in features if f.get('nn_news_sum', 0) > 0]
                    print(f"  –§–∏—á —Å –Ω–µ–Ω—É–ª–µ–≤—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: {len(non_zero_features)} –∏–∑ {len(features)}")
                    
                    if non_zero_features:
                        max_sum = max(f.get('nn_news_sum', 0) for f in non_zero_features)
                        max_count = max(f.get('nn_news_count', 0) for f in non_zero_features)
                        print(f"  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤–ª–∏—è–Ω–∏—è: {max_sum:.4f}")
                        print(f"  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {max_count}")
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –Ω–µ–Ω—É–ª–µ–≤—ã—Ö —Ñ–∏—á
                        print(f"\nüîç –ü—Ä–∏–º–µ—Ä—ã –Ω–µ–Ω—É–ª–µ–≤—ã—Ö —Ñ–∏—á:")
                        for i, feat in enumerate(non_zero_features[:3]):
                            print(f"  {i+1}. {feat['ticker']} ({feat['date']}):")
                            print(f"     nn_news_sum: {feat['nn_news_sum']:.4f}")
                            print(f"     nn_news_count: {feat['nn_news_count']}")
                    else:
                        print(f"  ‚ùå –í—Å–µ —Ñ–∏—á–∏ —Ä–∞–≤–Ω—ã –Ω—É–ª—é!")
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {response.text[:500]}...")
                
        except FileNotFoundError:
            print(f"‚ùå –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        except requests.exceptions.ConnectionError:
            print(f"‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ - —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        except requests.exceptions.Timeout:
            print(f"‚ùå –¢–∞–π–º–∞—É—Ç - —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

if __name__ == "__main__":
    test_fixed_json_files()

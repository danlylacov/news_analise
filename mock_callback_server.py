#!/usr/bin/env python3
"""
Mock callback —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
"""

from flask import Flask, request, jsonify
import json
from datetime import datetime

app = Flask(__name__)

@app.route('/news', methods=['POST'])
def handle_news_callback():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ callback –æ—Ç news API"""
    try:
        data = request.get_json()
        
        print(f"\nüéØ –ü–æ–ª—É—á–µ–Ω callback:")
        print(f"   –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        print(f"   Session ID: {data.get('sessionId', 'N/A')}")
        print(f"   –°—Ç–∞—Ç—É—Å: {data.get('status', 'N/A')}")
        
        if data.get('status') == 'success':
            print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞!")
            if 'data' in data:
                try:
                    parsed_data = json.loads(data['data'])
                    print(f"   üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
                    print(f"      - –ù–æ–≤–æ—Å—Ç–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {parsed_data.get('summary', {}).get('news_count', 'N/A')}")
                    print(f"      - –°—Ç—Ä–æ–∫ features: {parsed_data.get('summary', {}).get('rows_features', 'N/A')}")
                    print(f"      - –°—Ç—Ä–æ–∫ joined: {parsed_data.get('summary', {}).get('rows_joined', 'N/A')}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä features
                    features = parsed_data.get('features', [])
                    if features:
                        print(f"   üìà –ü—Ä–∏–º–µ—Ä features (–ø–µ—Ä–≤—ã–µ 2 –∑–∞–ø–∏—Å–∏):")
                        for i, feature in enumerate(features[:2]):
                            print(f"      {i+1}. –¢–∏–∫–µ—Ä: {feature.get('ticker', 'N/A')}, "
                                  f"–î–∞—Ç–∞: {feature.get('date', 'N/A')}, "
                                  f"News count: {feature.get('nn_news_count', 'N/A')}")
                except json.JSONDecodeError as e:
                    print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏!")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('errorMessage', 'N/A')}")
        
        print(f"   üìù –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2, ensure_ascii=False)}")
        
        return jsonify({"message": "Callback processed successfully"})
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ callback —Å–µ—Ä–≤–µ—Ä–µ: {e}")
        return jsonify({"error": str(e)}), 500

@app.route('/health', methods=['GET'])
def health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è callback —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({"status": "healthy", "message": "Callback server is running"})

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ mock callback —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 8081")
    print("üì° –û–∂–∏–¥–∞–Ω–∏–µ callback –æ—Ç news API...")
    print("=" * 50)
    app.run(host='0.0.0.0', port=8081, debug=True)

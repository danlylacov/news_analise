#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ /process-news-file
"""

import requests
import json
import pandas as pd
from datetime import datetime
import io

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_URL = "http://localhost:8000"
CALLBACK_URL = "http://localhost:8080/news"  # URL –≤–∞—à–µ–≥–æ callback —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
SESSION_ID = f"test_session_{datetime.now().strftime('%Y%m%d_%H%M%S')}"

def create_test_news_file():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π CSV —Ñ–∞–π–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏"""
    test_data = [
        {
            "publish_date": "2025-01-01 10:00:00",
            "title": "–°–±–µ—Ä–±–∞–Ω–∫ –æ–±—ä—è–≤–∏–ª –æ —Ä–æ—Å—Ç–µ –ø—Ä–∏–±—ã–ª–∏",
            "publication": "–†–ë–ö"
        },
        {
            "publish_date": "2025-01-01 11:00:00", 
            "title": "–ì–∞–∑–ø—Ä–æ–º —É–≤–µ–ª–∏—á–∏–ª –¥–æ–±—ã—á—É –≥–∞–∑–∞",
            "publication": "–ö–æ–º–º–µ—Ä—Å–∞–Ω—Ç"
        },
        {
            "publish_date": "2025-01-01 12:00:00",
            "title": "–õ—É–∫–æ–π–ª –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã",
            "publication": "–í–µ–¥–æ–º–æ—Å—Ç–∏"
        },
        {
            "publish_date": "2025-01-01 13:00:00",
            "title": "–†–æ—Å—Å–∏–π—Å–∫–∏–µ –∞–∫—Ü–∏–∏ –≤—ã—Ä–æ—Å–ª–∏ –Ω–∞ —Ñ–æ–Ω–µ –Ω–æ–≤–æ—Å—Ç–µ–π",
            "publication": "–ò–Ω—Ç–µ—Ä—Ñ–∞–∫—Å"
        },
        {
            "publish_date": "2025-01-01 14:00:00",
            "title": "–¶–ë –†–§ —Å–æ—Ö—Ä–∞–Ω–∏–ª –∫–ª—é—á–µ–≤—É—é —Å—Ç–∞–≤–∫—É",
            "publication": "–¢–ê–°–°"
        }
    ]
    
    df = pd.DataFrame(test_data)
    
    # –°–æ–∑–¥–∞–µ–º CSV –≤ –ø–∞–º—è—Ç–∏
    csv_buffer = io.StringIO()
    df.to_csv(csv_buffer, index=False, encoding='utf-8')
    csv_content = csv_buffer.getvalue()
    
    return csv_content.encode('utf-8')

def test_file_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç /process-news-file"""
    
    print(f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞: {API_URL}/process-news-file")
    print(f"Session ID: {SESSION_ID}")
    print(f"Callback URL: {CALLBACK_URL}")
    print("-" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    file_content = create_test_news_file()
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è multipart/form-data
    files = {
        'file': ('test_news.csv', file_content, 'text/csv')
    }
    
    data = {
        'callbackUrl': CALLBACK_URL,
        'sessionId': SESSION_ID,
        'artifacts_dir': 'artifacts',
        'p_threshold': '0.5',
        'half_life_days': '0.5',
        'max_days': '5.0',
        'add_sentiment': 'true'
    }
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        response = requests.post(
            f"{API_URL}/process-news-file",
            files=files,
            data=data,
            timeout=30
        )
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {json.dumps(result, indent=2, ensure_ascii=False)}")
            print("\n‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ!")
            print(f"Session ID –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: {result['sessionId']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

def test_health_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç /health"""
    
    print(f"\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞: {API_URL}/health")
    print("-" * 50)
    
    try:
        response = requests.post(f"{API_URL}/health", timeout=10)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {json.dumps(result, indent=2, ensure_ascii=False)}")
            
            if result.get('status') == 'healthy':
                print("‚úÖ API –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            else:
                print(f"‚ö†Ô∏è API –Ω–µ –≥–æ—Ç–æ–≤: {result.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

def test_root_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç"""
    
    print(f"\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞: {API_URL}/")
    print("-" * 50)
    
    try:
        response = requests.get(f"{API_URL}/", timeout=10)
        
        print(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {json.dumps(result, indent=2, ensure_ascii=False)}")
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω!")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"–¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–æ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ /process-news-file")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
    test_root_endpoint()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º health —ç–Ω–¥–ø–æ–∏–Ω—Ç
    test_health_endpoint()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
    test_file_endpoint()
    
    print("\n" + "=" * 60)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\n–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:")
    print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8000")
    print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ callback —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ localhost:8080")
    print("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –≤ –ø–∞–ø–∫–µ 'artifacts'")
    print("- –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ callback URL")

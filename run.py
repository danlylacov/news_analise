#!/usr/bin/env python3
"""
–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã
"""
import sys
import os
import argparse
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent.parent / 'src'))

def train_model():
    """–û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏...")
    os.system("python src/ml/train_news_ticker.py --news datasets/raw/train_news.csv --artifacts artifacts/ --epochs 3")

def run_api():
    """–ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞...")
    os.system("python src/api/app.py")

def run_tests():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...")
    os.system("python tests/integration/test_full_response.py")

def create_json_samples():
    """–°–æ–∑–¥–∞–Ω–∏–µ JSON –æ–±—Ä–∞–∑—Ü–æ–≤"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ JSON –æ–±—Ä–∞–∑—Ü–æ–≤...")
    os.system("python src/utils/create_full_json.py")
    os.system("python src/utils/fix_parameters.py")

def main():
    parser = argparse.ArgumentParser(description='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π –∞–Ω–∞–ª–∏–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π')
    parser.add_argument('command', choices=['train', 'api', 'test', 'json', 'all'], 
                       help='–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
    
    args = parser.parse_args()
    
    if args.command == 'train':
        train_model()
    elif args.command == 'api':
        run_api()
    elif args.command == 'test':
        run_tests()
    elif args.command == 'json':
        create_json_samples()
    elif args.command == 'all':
        print("üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        create_json_samples()
        train_model()
        run_tests()

if __name__ == "__main__":
    main()
